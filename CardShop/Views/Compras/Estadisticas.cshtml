@model IEnumerable<CardShop.Models.Compra>

@{
    ViewData["Title"] = "Estadisticas";
}

<h1>Estadisticas</h1>
<br />
<h2> Ventas confirmadas hasta la fecha</h2>
<table class="table" style="border:dashed">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Total)
            </th>
            <th>
                Fecha Actual
            </th>
        </tr>
    </thead>
    <tbody>
        @{ double total = 0;
            foreach (var item in Model)
            {
                if (!item.Estado.Equals("En preparacion"))
                {
                    total += item.Total;
                }
            }
        }
        <tr>
            <td>
                $
                @Html.DisplayFor(modelItem => total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => DateTime.Now)
            </td>

        </tr>

    </tbody>
</table>
<h2>Estado Pedidos</h2>
<table class="table" style="border:dashed">
    <thead>
        <tr>
            <th>
                Pedidos en preparación
            </th>
            <th>
                Pedidos enviados
            </th>
            <th>
                Pedidos entregados
            </th>
            <th>
                Pedidos confirmados por el usuario
            </th>
            <th>
                Total pedidos
            </th>
            <th>
                Fecha Actual
            </th>
        </tr>
    </thead>
    <tbody>
        @{ int enPreparacion = 0;
            int enviado = 0;
            int entregado = 0;
            int recibido = 0;
            int cantTotalPedidos = 0;
            foreach (var item in Model)
            {
                cantTotalPedidos = Model.Count();
                if (item.Estado.Equals("En preparacion"))
                {
                    enPreparacion++;
                }
                else if (item.Estado.Equals("Enviado"))
                {
                    enviado++;
                }
                else if (item.Estado.Equals("Entregado"))
                {
                    entregado++;
                }
                else
                {
                    recibido++;
                }
            }
        }
        <tr>
            <td>
                @Html.DisplayFor(modelItem => enPreparacion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => enviado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => entregado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => recibido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => cantTotalPedidos)
            </td>
            <td>
                @Html.DisplayFor(modelItem => DateTime.Now)
            </td>

        </tr>

    </tbody>
</table>

<h2> Compra más cara</h2>
<table class="table" style="border:dashed">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Usuario)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Total)
            </th>
            <th>
                Fecha de la compra
            </th>

        </tr>
    </thead>
    <tbody>
        @{ double masGasto = 0;
            string usuarioMasGasto = "";
            DateTime fechaQueLoHizo = DateTime.Now;
            foreach (var item in Model)
            {
                if (item.Total > masGasto)
                    masGasto = item.Total;
                usuarioMasGasto = item.Usuario.UserName;
                fechaQueLoHizo = item.Fecha;
            }
        }
        <tr>
            <td>

                @Html.DisplayFor(modelItem => usuarioMasGasto)
            <td>
                $
                @Html.DisplayFor(modelItem => masGasto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => fechaQueLoHizo)
            </td>

        </tr>

    </tbody>
</table>

<h2> Usuarios registrados que realizaron una compra</h2>
<table class="table" style="border:dashed">
    <thead>
        <tr>
            <th>
                Cantidad de usuarios
            </th>
            <th>
                Fecha actual
            </th>


        </tr>
    </thead>
    <tbody>
        @{ List<Usuario> usuarios = new List<Usuario>();
            foreach (var item in Model)
            {
                if (!usuarios.Contains(item.Usuario))
                {
                    usuarios.Add(item.Usuario);
                }
            }
        }
        <tr>
            <td>
                @usuarios.Count()
            <td>
                @Html.DisplayFor(modelItem => DateTime.Now)
            </td>
        </tr>

    </tbody>
</table>